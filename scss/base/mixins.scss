// $Typescale
// -------------------------------------//

@mixin typescale($scale, $base, $value, $measure:'') {
    @if $value == rem or $value == em {
        font-size: context-calc($scale, $base, $value);
    } @else {
        font-size: $scale * 1px;
    }
}

// $Headings
// https://github.com/typeplate/starter-kit/issues/27
// -------------------------------------//
// Props to Harry Roberts for this trick.
//
// @notes
// optimizeLegibility           Enables ligatures and kerning
// single line height           Fixes large spaces when a heading wraps two lines

%hN {
    text-rendering: optimizeLegibility;
    line-height: 1;
    margin-top: 0;
    color: $heading-color;
}

// $Hypens
// -------------------------------------//
// @notes
// http://caniuse.com/#search=hyphens
// http://trentwalton.com/2011/09/07/css-hyphenation
//
// @values              [ none | manual | auto ]

@mixin hyphens($val) {
    @each $prefix in $prefixes {
        #{$prefix}hyphens: $val;
    }
}

// $Smallcaps
// -------------------------------------//
// @notes
// http://caniuse.com/#search=font-variant
// http://blog.hypsometry.com/articles/true-small-capitals-with-font-face
// 'font-variant' depends on the font family in use.
// Some font-families don't support small caps
// or don't provide them with their Webfont.

@mixin smallcaps($color, $font-weight) {
    @each $prefix in $prefixes {
        #{$prefix}font-variant: small-caps;
    }
    font-weight: $font-weight;
    text-transform: lowercase;
    color: $color;
}

@mixin cite-style($display, $text-align, $font-size) {
    display: $display;
    font-size: $font-size;
    text-align: $text-align;
}

// $Code
// -------------------------------------//

@mixin white-space($wrap-space) {
    @if $wrap-space == 'pre-wrap' {
        white-space: #{-moz-}$wrap-space;
        white-space: $wrap-space;
    } @else {
        white-space: $wrap-space;
    }
}
